"0","get_allele_freq <- function(data_set, file_prefix) {"
"0","  # creating empty vector with the same number of columns as subset dataset"
"0","  colmeanRow <- numeric(ncol(data_set))"
"0","  # creating list of elements of different types"
"0","  out_ams <- list()"
"0","    # creating new variable to store allele freq of each marker in all the columns, starting with 6th column where marker starts and ignoring any NA's"
"0","  avg_marker_score <- colMeans(data_set[,6:ncol(data_set)], na.rm = TRUE) / 2"
"0","  # creates matrix filled with NA values and number of columns is set to ncol in passed dataset"
"0","  new_mean_row <- as.data.frame(matrix(NA, nrow = 1, ncol = ncol(data_set)))"
"0","  # set colnames of new_mean_row to colnames of passed dataset"
"0","  colnames(new_mean_row) <- colnames(data_set)"
"0","  # assign calculated column means to columns starting with 6th column in new row"
"0","  new_mean_row[1,6:ncol(data_set)] <- avg_marker_score"
"0","  #rownames(data_set)[nrow(data_set)] <- ""Allele Frequency"""
"0","    #colmeanRow <- as.data.frame(t(avg_marker_score))"
"0","  out_ams <- rbind(data_set, new_mean_row)"
"0","  file_name <- paste0(file_prefix, ""allele_freq"", "".csv"")"
"0","  write.csv(out_ams, file = file_name, row.names = TRUE)"
"0","  return(out_ams)"
"0","}"
